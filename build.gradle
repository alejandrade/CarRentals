plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "org.flywaydb.flyway" version "8.2.0"
    id "com.github.node-gradle.node" version "5.0.0"
}

group = 'com.techisgood'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.514'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    
    implementation "com.stripe:stripe-java:22.28.0"
}

tasks.named('test') {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:mysql://database-1.cmzhbabubmrg.us-east-2.rds.amazonaws.com:3306/car_rentals'
    user = 'root'
    password = 'changeme'
    locations = ['filesystem:src/main/resources/db/migration']
}

node {
    version = '18.11.0'
    npmVersion = '9.8.1'
    download = true
    nodeProjectDir = file('frontend')  // Set your directory path here
}

bootBuildImage {
    imageName = "830433532063.dkr.ecr.us-east-2.amazonaws.com/carrentals"
    tags = [version, "latest"]
}

task npmBuild(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run', 'build']
}

