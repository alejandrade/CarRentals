plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "org.flywaydb.flyway" version "8.2.0"
    id "com.github.node-gradle.node" version "5.0.0"
}

group = 'com.techisgood'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}



configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.twilio.sdk:twilio:9.9.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    
    implementation "com.stripe:stripe-java:22.28.0"
}

tasks.named('test') {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:mysql://127.0.0.1:3306/car_rentals'
    user = 'root'
    locations = ['filesystem:src/main/resources/db/migration']
}

node {
    version = '18.11.0'
    npmVersion = '9.8.1'
    download = false
    nodeProjectDir = file('frontend')  // Set your directory path here
}

task npmBuild(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run', 'build']
}

